# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  
  # Environment name
  environmentName: 'auditstory'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: YarnInstaller@3
      inputs:
        versionSpec: '1.x'
    - task: Yarn@3
      displayName: 'Yarn install'
      inputs:
        projectDirectory: 'frontend/rashtan-auditstory-tsclient'
        arguments: install
    - task: Yarn@3
      displayName: 'Yarn build'
      inputs:
        projectDirectory: 'frontend/rashtan-auditstory-tsclient'
        arguments: 'build'
        productionMode: true
    - task: CmdLine@2
      inputs:
        script: |
          dir
          cd frontend/rashtan-auditstory-tsclient
          dir
          
          echo Hello world'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: 'build/'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifact'
      inputs: 
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop' 
        publishLocation: Container

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          
          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: drop
          - task: AzureRmWebAppDeployment@4
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: 'webApp'
              WebAppName: '$(webAppName)'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.zip'